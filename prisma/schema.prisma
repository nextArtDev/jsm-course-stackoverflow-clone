// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  // provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Image {
  id String @id @default(uuid())

  url String
  key String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model User {
  id String @id @default(uuid())

  name             String
  // username         String?
  phone            String    @unique
  password         String
  bio              String?
  picture          String?
  location         String?
  portfolioWebsite String?
  reputation       Int       @default(0)
  // role             Role      @default(USER)
  isVerified       Boolean   @default(false)
  verificationCode Int?
  verificationDate DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  saved              Question[] @relation("UserWhoSaved")
  upvotedQuestions   Question[] @relation("UpvotedQuestions")
  downvotedQuestions Question[] @relation("DownvotedQuestions")
  authoredQuestions  Question[] @relation("QuestionAuthor")

  upvotedAnswers   Answer[]      @relation("UpvotedAnswers")
  downvotedAnswers Answer[]      @relation("DownvotedAnswers")
  authoredAnswers  Answer[]      @relation("AnswerAuthor")
  Tag              Tag?          @relation(fields: [tagId], references: [id])
  tagId            Int?
  Interaction      Interaction[]
}

model Question {
  id String @id @default(uuid())

  title   String
  content String
  views   Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  upvoters   User[] @relation("UpvotedQuestions")
  downvoters User[] @relation("DownvotedQuestions")

  author   User   @relation("QuestionAuthor", fields: [authorId], references: [id])
  authorId String

  answers Answer[]

  tags Tag[]

  usersWhoSaved User?         @relation("UserWhoSaved", fields: [userId], references: [id])
  userId        String?
  Interaction   Interaction[]
}

// https://www.prisma.io/docs/concepts/components/prisma-schema/relations/many-to-many-relations#mongodb
model Answer {
  id Int @id @default(autoincrement())

  content String

  upvoters   User[]   @relation("UpvotedAnswers")
  downvoters User[]   @relation("DownvotedAnswers")
  author     User     @relation("AnswerAuthor", fields: [authorId], references: [id])
  authorId   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Question    Question      @relation(fields: [questionId], references: [id])
  questionId  String
  Interaction Interaction[]
}

model Tag {
  id Int @id @default(autoincrement())

  name        String
  description String

  questions Question[]

  followers User[]

  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  Interaction   Interaction? @relation(fields: [interactionId], references: [id])
  interactionId Int?
}

model Interaction {
  id   Int  @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])

  question Question @relation(fields: [questionId], references: [id])
  answer   Answer   @relation(fields: [answerId], references: [id])

  action String

  tags Tag[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  userId     String
  questionId String
  answerId   Int
}
